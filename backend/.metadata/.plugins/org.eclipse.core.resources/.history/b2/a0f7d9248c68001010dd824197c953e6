package com.example.demo.service;

import com.example.demo.model.Role;
import com.example.demo.model.User;
import com.example.demo.repository.RoleRepository;
import com.example.demo.repository.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import java.util.Optional;

@Service
public class UserService {

    @Autowired
    private UserRepository userRepository;

    @Autowired
    private RoleRepository roleRepository;

    public String registerUser(User user) {
        if (userRepository.existsByEmail(user.getEmail())) {
            return "Email already registered!";
        }

        // Restrict Admin registration from frontend
        if (user.getRole().getName().equalsIgnoreCase("Admin")) {
            return "Admin registration is not allowed!";
        }

        Optional<Role> roleOpt = roleRepository.findByName(user.getRole().getName());
        if (!roleOpt.isPresent()) {
            return "Invalid role!";
        }

        user.setRole(roleOpt.get());
        userRepository.save(user);
        return "User registered successfully!";
    }

    public Optional<User> loginUser(String email, String password) {
        Optional<User> existingUser = userRepository.findByEmail(email);
        if (existingUser.isPresent() && existingUser.get().getPassword().equals(password)) {
            return existingUser;
        }
        return Optional.empty();
    }

    public Optional<User> getUserByEmail(String email) {
        return userRepository.findByEmail(email);
    }
}
