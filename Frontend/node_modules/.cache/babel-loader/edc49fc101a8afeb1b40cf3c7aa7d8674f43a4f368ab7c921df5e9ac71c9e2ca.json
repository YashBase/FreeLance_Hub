{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axiosClient from \"../API/axiosClient\";\nexport const fetchRequirementsByEmail = createAsyncThunk(\"requirements/fetchByEmail\", async (email, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axiosClient.get(`/api/client/requirements/${email}`);\n    return response.data;\n  } catch (err) {\n    var _err$response;\n    return rejectWithValue(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || \"Failed to fetch requirements\");\n  }\n});\nconst requirementsSlice = createSlice({\n  name: \"requirements\",\n  initialState: {\n    requirements: [],\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchRequirementsByEmail.pending, state => {\n      state.loading = true;\n    }).addCase(fetchRequirementsByEmail.fulfilled, (state, action) => {\n      state.loading = false;\n      state.requirements = action.payload;\n    }).addCase(fetchRequirementsByEmail.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport default requirementsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axiosClient","fetchRequirementsByEmail","email","rejectWithValue","response","get","data","err","_err$response","requirementsSlice","name","initialState","requirements","loading","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["D:/CDAC MY Project/FreeLance_Hub/Frontend/src/redux/requirementsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axiosClient from \"../API/axiosClient\";\r\n\r\nexport const fetchRequirementsByEmail = createAsyncThunk(\r\n  \"requirements/fetchByEmail\",\r\n  async (email, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosClient.get(`/api/client/requirements/${email}`);\r\n      return response.data;\r\n    } catch (err) {\r\n      return rejectWithValue(err.response?.data || \"Failed to fetch requirements\");\r\n    }\r\n  }\r\n);\r\n\r\nconst requirementsSlice = createSlice({\r\n  name: \"requirements\",\r\n  initialState: {\r\n    requirements: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchRequirementsByEmail.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(fetchRequirementsByEmail.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.requirements = action.payload;\r\n      })\r\n      .addCase(fetchRequirementsByEmail.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default requirementsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,WAAW,MAAM,oBAAoB;AAE5C,OAAO,MAAMC,wBAAwB,GAAGF,gBAAgB,CACtD,2BAA2B,EAC3B,OAAOG,KAAK,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACpC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMJ,WAAW,CAACK,GAAG,CAAC,4BAA4BH,KAAK,EAAE,CAAC;IAC3E,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,GAAG,EAAE;IAAA,IAAAC,aAAA;IACZ,OAAOL,eAAe,CAAC,EAAAK,aAAA,GAAAD,GAAG,CAACH,QAAQ,cAAAI,aAAA,uBAAZA,aAAA,CAAcF,IAAI,KAAI,8BAA8B,CAAC;EAC9E;AACF,CACF,CAAC;AAED,MAAMG,iBAAiB,GAAGX,WAAW,CAAC;EACpCY,IAAI,EAAE,cAAc;EACpBC,YAAY,EAAE;IACZC,YAAY,EAAE,EAAE;IAChBC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACjB,wBAAwB,CAACkB,OAAO,EAAGC,KAAK,IAAK;MACpDA,KAAK,CAACP,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC,CACDK,OAAO,CAACjB,wBAAwB,CAACoB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC9DF,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACR,YAAY,GAAGU,MAAM,CAACC,OAAO;IACrC,CAAC,CAAC,CACDL,OAAO,CAACjB,wBAAwB,CAACuB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC7DF,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAed,iBAAiB,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}