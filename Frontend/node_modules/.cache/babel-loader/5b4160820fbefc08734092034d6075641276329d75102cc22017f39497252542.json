{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axiosClient from \"../API/axiosClient\";\n\n// 🔄 Fetch proposals received by client using email\nexport const fetchProposalsByEmail = createAsyncThunk(\"proposals/fetchByEmail\", async (email, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axiosClient.get(`/proposals/${email}`);\n    return response.data;\n  } catch (err) {\n    var _err$response;\n    return rejectWithValue(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || \"Failed to fetch proposals\");\n  }\n});\n\n// 🔄 Fetch proposals by requirement ID (for filter dropdown)\nexport const fetchProposalsByRequirementId = createAsyncThunk(\"proposals/fetchByRequirementId\", async (reqId, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axiosClient.get(`/proposals/by-requirement/${reqId}`);\n    return response.data;\n  } catch (err) {\n    var _err$response2;\n    return rejectWithValue(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || \"Failed to fetch proposals by requirement\");\n  }\n});\n\n// ✅ Accept proposal\nexport const acceptProposal = createAsyncThunk(\"proposals/accept\", async (proposalId, {\n  rejectWithValue\n}) => {\n  try {\n    await axiosClient.post(`/accept-proposal/${proposalId}`);\n    return {\n      proposalId,\n      status: \"accepted\"\n    };\n  } catch (err) {\n    return rejectWithValue(\"Failed to accept proposal\");\n  }\n});\n\n// ✅ Reject proposal\nexport const rejectProposal = createAsyncThunk(\"proposals/reject\", async (proposalId, {\n  rejectWithValue\n}) => {\n  try {\n    await axiosClient.post(`/reject-proposal/${proposalId}`);\n    return {\n      proposalId,\n      status: \"rejected\"\n    };\n  } catch (err) {\n    return rejectWithValue(\"Failed to reject proposal\");\n  }\n});\nconst proposalsSlice = createSlice({\n  name: \"proposals\",\n  initialState: {\n    proposals: [],\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder\n    // 📥 Fetch proposals by email\n    .addCase(fetchProposalsByEmail.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchProposalsByEmail.fulfilled, (state, action) => {\n      state.loading = false;\n      state.proposals = action.payload;\n    }).addCase(fetchProposalsByEmail.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n\n    // 📥 Fetch proposals by requirement ID\n    .addCase(fetchProposalsByRequirementId.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchProposalsByRequirementId.fulfilled, (state, action) => {\n      state.loading = false;\n      state.proposals = action.payload;\n    }).addCase(fetchProposalsByRequirementId.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n\n    // ✅ Accept proposal\n    .addCase(acceptProposal.fulfilled, (state, action) => {\n      const {\n        proposalId,\n        status\n      } = action.payload;\n      // Accept selected proposal and reject others\n      state.proposals = state.proposals.map(p => p.proposalId === proposalId ? {\n        ...p,\n        status\n      } : {\n        ...p,\n        status: \"rejected\"\n      });\n    })\n\n    // ❌ Reject proposal\n    .addCase(rejectProposal.fulfilled, (state, action) => {\n      const {\n        proposalId,\n        status\n      } = action.payload;\n      const proposal = state.proposals.find(p => p.proposalId === proposalId);\n      if (proposal) {\n        proposal.status = status;\n      }\n    }).addCase(acceptProposal.rejected, (state, action) => {\n      state.error = action.payload;\n    }).addCase(rejectProposal.rejected, (state, action) => {\n      state.error = action.payload;\n    });\n  }\n});\nexport default proposalsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axiosClient","fetchProposalsByEmail","email","rejectWithValue","response","get","data","err","_err$response","fetchProposalsByRequirementId","reqId","_err$response2","acceptProposal","proposalId","post","status","rejectProposal","proposalsSlice","name","initialState","proposals","loading","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","map","p","proposal","find","reducer"],"sources":["D:/CDAC MY Project/FreeLance_Hub/Frontend/src/redux/proposalsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axiosClient from \"../API/axiosClient\";\r\n\r\n// 🔄 Fetch proposals received by client using email\r\nexport const fetchProposalsByEmail = createAsyncThunk(\r\n  \"proposals/fetchByEmail\",\r\n  async (email, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosClient.get(`/proposals/${email}`);\r\n      return response.data;\r\n    } catch (err) {\r\n      return rejectWithValue(err.response?.data || \"Failed to fetch proposals\");\r\n    }\r\n  }\r\n);\r\n\r\n// 🔄 Fetch proposals by requirement ID (for filter dropdown)\r\nexport const fetchProposalsByRequirementId = createAsyncThunk(\r\n  \"proposals/fetchByRequirementId\",\r\n  async (reqId, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosClient.get(`/proposals/by-requirement/${reqId}`);\r\n      return response.data;\r\n    } catch (err) {\r\n      return rejectWithValue(err.response?.data || \"Failed to fetch proposals by requirement\");\r\n    }\r\n  }\r\n);\r\n\r\n// ✅ Accept proposal\r\nexport const acceptProposal = createAsyncThunk(\r\n  \"proposals/accept\",\r\n  async (proposalId, { rejectWithValue }) => {\r\n    try {\r\n      await axiosClient.post(`/accept-proposal/${proposalId}`);\r\n      return { proposalId, status: \"accepted\" };\r\n    } catch (err) {\r\n      return rejectWithValue(\"Failed to accept proposal\");\r\n    }\r\n  }\r\n);\r\n\r\n// ✅ Reject proposal\r\nexport const rejectProposal = createAsyncThunk(\r\n  \"proposals/reject\",\r\n  async (proposalId, { rejectWithValue }) => {\r\n    try {\r\n      await axiosClient.post(`/reject-proposal/${proposalId}`);\r\n      return { proposalId, status: \"rejected\" };\r\n    } catch (err) {\r\n      return rejectWithValue(\"Failed to reject proposal\");\r\n    }\r\n  }\r\n);\r\n\r\nconst proposalsSlice = createSlice({\r\n  name: \"proposals\",\r\n  initialState: {\r\n    proposals: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      // 📥 Fetch proposals by email\r\n      .addCase(fetchProposalsByEmail.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchProposalsByEmail.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.proposals = action.payload;\r\n      })\r\n      .addCase(fetchProposalsByEmail.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n\r\n      // 📥 Fetch proposals by requirement ID\r\n      .addCase(fetchProposalsByRequirementId.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchProposalsByRequirementId.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.proposals = action.payload;\r\n      })\r\n      .addCase(fetchProposalsByRequirementId.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n\r\n      // ✅ Accept proposal\r\n      .addCase(acceptProposal.fulfilled, (state, action) => {\r\n        const { proposalId, status } = action.payload;\r\n        // Accept selected proposal and reject others\r\n        state.proposals = state.proposals.map((p) =>\r\n          p.proposalId === proposalId\r\n            ? { ...p, status }\r\n            : { ...p, status: \"rejected\" }\r\n        );\r\n      })\r\n\r\n      // ❌ Reject proposal\r\n      .addCase(rejectProposal.fulfilled, (state, action) => {\r\n        const { proposalId, status } = action.payload;\r\n        const proposal = state.proposals.find((p) => p.proposalId === proposalId);\r\n        if (proposal) {\r\n          proposal.status = status;\r\n        }\r\n      })\r\n\r\n      .addCase(acceptProposal.rejected, (state, action) => {\r\n        state.error = action.payload;\r\n      })\r\n      .addCase(rejectProposal.rejected, (state, action) => {\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default proposalsSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}