{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axiosAuth from '../API/axiosAuth';\n\n// 🔄 Fetch user by email (used after login)\nexport const fetchUserByEmail = createAsyncThunk('auth/fetchUser', async (email, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axiosAuth.get(`/user/${email}`);\n    console.log(\"✅ fetchUserByEmail response:\", response.data);\n    return response.data;\n  } catch (error) {\n    var _error$response;\n    console.error(\"❌ fetchUserByEmail failed:\", error);\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || \"User fetch failed\");\n  }\n});\n\n// 📝 Register user\nexport const registerUser = createAsyncThunk('auth/registerUser', async (userData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axiosAuth.post(\"/register\", userData);\n    return response.data;\n  } catch (error) {\n    var _error$response2;\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || \"Registration failed\");\n  }\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    isLoggedIn: false,\n    user: null,\n    clientId: null,\n    loading: false,\n    error: null,\n    message: null\n  },\n  reducers: {\n    loginSuccess: (state, action) => {\n      const data = action.payload;\n      state.isLoggedIn = true;\n      state.user = {\n        userId: data.userId,\n        email: data.email,\n        fullName: data.user_name || data.fullName || \"\",\n        // ✅ normalize\n        contact: data.contact,\n        role: data.role\n      };\n      state.clientId = data.clientId || null;\n      state.error = null;\n    },\n    logout: state => {\n      state.isLoggedIn = false;\n      state.user = null;\n      state.clientId = null;\n      state.message = null;\n      state.error = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchUserByEmail.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchUserByEmail.fulfilled, (state, action) => {\n      const data = action.payload;\n      state.loading = false;\n      state.clientId = data.clientId || null;\n      state.user = {\n        userId: data.userId,\n        email: data.email,\n        fullName: data.user_name || data.fullName || \"\",\n        // ✅ normalize\n        contact: data.contact,\n        role: data.role\n      };\n      state.isLoggedIn = true;\n    }).addCase(fetchUserByEmail.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    }).addCase(registerUser.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(registerUser.fulfilled, (state, action) => {\n      state.loading = false;\n      state.message = action.payload;\n    }).addCase(registerUser.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  loginSuccess,\n  logout\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axiosAuth","fetchUserByEmail","email","rejectWithValue","response","get","console","log","data","error","_error$response","registerUser","userData","post","_error$response2","authSlice","name","initialState","isLoggedIn","user","clientId","loading","message","reducers","loginSuccess","state","action","payload","userId","fullName","user_name","contact","role","logout","extraReducers","builder","addCase","pending","fulfilled","rejected","actions","reducer"],"sources":["D:/CDAC MY Project/FreeLance_Hub/Frontend/src/redux/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axiosAuth from '../API/axiosAuth';\r\n\r\n// 🔄 Fetch user by email (used after login)\r\nexport const fetchUserByEmail = createAsyncThunk(\r\n  'auth/fetchUser',\r\n  async (email, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosAuth.get(`/user/${email}`);\r\n      console.log(\"✅ fetchUserByEmail response:\", response.data);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"❌ fetchUserByEmail failed:\", error);\r\n      return rejectWithValue(error.response?.data || \"User fetch failed\");\r\n    }\r\n  }\r\n);\r\n\r\n// 📝 Register user\r\nexport const registerUser = createAsyncThunk(\r\n  'auth/registerUser',\r\n  async (userData, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axiosAuth.post(\"/register\", userData);\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.response?.data || \"Registration failed\");\r\n    }\r\n  }\r\n);\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState: {\r\n    isLoggedIn: false,\r\n    user: null,\r\n    clientId: null,\r\n    loading: false,\r\n    error: null,\r\n    message: null,\r\n  },\r\n  reducers: {\r\n    loginSuccess: (state, action) => {\r\n      const data = action.payload;\r\n      state.isLoggedIn = true;\r\n      state.user = {\r\n        userId: data.userId,\r\n        email: data.email,\r\n        fullName: data.user_name || data.fullName || \"\", // ✅ normalize\r\n        contact: data.contact,\r\n        role: data.role,\r\n      };\r\n      state.clientId = data.clientId || null;\r\n      state.error = null;\r\n    },\r\n    logout: (state) => {\r\n      state.isLoggedIn = false;\r\n      state.user = null;\r\n      state.clientId = null;\r\n      state.message = null;\r\n      state.error = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchUserByEmail.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(fetchUserByEmail.fulfilled, (state, action) => {\r\n        const data = action.payload;\r\n        state.loading = false;\r\n        state.clientId = data.clientId || null;\r\n        state.user = {\r\n          userId: data.userId,\r\n          email: data.email,\r\n          fullName: data.user_name || data.fullName || \"\", // ✅ normalize\r\n          contact: data.contact,\r\n          role: data.role,\r\n        };\r\n        state.isLoggedIn = true;\r\n      })\r\n      .addCase(fetchUserByEmail.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      })\r\n      .addCase(registerUser.pending, (state) => {\r\n        state.loading = true;\r\n        state.error = null;\r\n      })\r\n      .addCase(registerUser.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.message = action.payload;\r\n      })\r\n      .addCase(registerUser.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const { loginSuccess, logout } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}