{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axiosClient from \"../API/axiosClient\";\nexport const fetchTasksByClientEmail = createAsyncThunk(\"tasks/fetchByClientEmail\", async (email, {\n  rejectWithValue\n}) => {\n  try {\n    const res = await axiosClient.get(`/tasks/${email}`);\n    return res.data;\n  } catch (err) {\n    var _err$response;\n    return rejectWithValue(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || \"Failed to fetch tasks\");\n  }\n});\nconst taskSlice = createSlice({\n  name: \"tasks\",\n  initialState: {\n    tasks: [],\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchTasksByClientEmail.pending, state => {\n      state.loading = true;\n    }).addCase(fetchTasksByClientEmail.fulfilled, (state, action) => {\n      state.loading = false;\n      state.tasks = action.payload;\n    }).addCase(fetchTasksByClientEmail.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport default taskSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axiosClient","fetchTasksByClientEmail","email","rejectWithValue","res","get","data","err","_err$response","response","taskSlice","name","initialState","tasks","loading","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["D:/CDAC MY Project/FreeLance_Hub/Frontend/src/redux/taskSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axiosClient from \"../API/axiosClient\";\r\n\r\nexport const fetchTasksByClientEmail = createAsyncThunk(\r\n  \"tasks/fetchByClientEmail\",\r\n  async (email, { rejectWithValue }) => {\r\n    try {\r\n     const res = await axiosClient.get(`/tasks/${email}`);\r\n\r\n      return res.data;\r\n    } catch (err) {\r\n      return rejectWithValue(err.response?.data || \"Failed to fetch tasks\");\r\n    }\r\n  }\r\n);\r\n\r\nconst taskSlice = createSlice({\r\n  name: \"tasks\",\r\n  initialState: {\r\n    tasks: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchTasksByClientEmail.pending, (state) => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(fetchTasksByClientEmail.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.tasks = action.payload;\r\n      })\r\n      .addCase(fetchTasksByClientEmail.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport default taskSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,WAAW,MAAM,oBAAoB;AAE5C,OAAO,MAAMC,uBAAuB,GAAGF,gBAAgB,CACrD,0BAA0B,EAC1B,OAAOG,KAAK,EAAE;EAAEC;AAAgB,CAAC,KAAK;EACpC,IAAI;IACH,MAAMC,GAAG,GAAG,MAAMJ,WAAW,CAACK,GAAG,CAAC,UAAUH,KAAK,EAAE,CAAC;IAEnD,OAAOE,GAAG,CAACE,IAAI;EACjB,CAAC,CAAC,OAAOC,GAAG,EAAE;IAAA,IAAAC,aAAA;IACZ,OAAOL,eAAe,CAAC,EAAAK,aAAA,GAAAD,GAAG,CAACE,QAAQ,cAAAD,aAAA,uBAAZA,aAAA,CAAcF,IAAI,KAAI,uBAAuB,CAAC;EACvE;AACF,CACF,CAAC;AAED,MAAMI,SAAS,GAAGZ,WAAW,CAAC;EAC5Ba,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAClB,uBAAuB,CAACmB,OAAO,EAAGC,KAAK,IAAK;MACnDA,KAAK,CAACP,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC,CACDK,OAAO,CAAClB,uBAAuB,CAACqB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC7DF,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACR,KAAK,GAAGU,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC,CACDL,OAAO,CAAClB,uBAAuB,CAACwB,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC5DF,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAed,SAAS,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}